BoostConfig.cmake: remove no-op -pthread flag
BoostCore.cmake: remove toolset from library names

--- origsrc/boost_1_40_0/tools/build/CMake/BoostConfig.cmake	2009-06-16 00:16:29.000000000 -0500
+++ src/boost_1_40_0/tools/build/CMake/BoostConfig.cmake	2009-08-27 23:41:34.156549000 -0500
@@ -139,6 +139,7 @@ elseif(UNIX)
     set(BOOST_PLATFORM "mingw")
   elseif(CYGWIN)
     set(BOOST_PLATFORM "cygwin")
+    set(MULTI_THREADED_COMPILE_FLAGS "-D_REENTRANT")
   elseif (CMAKE_SYSTEM_NAME STREQUAL "Linux")
     set(BOOST_PLATFORM "linux")
   else()
--- origsrc/boost_1_40_0/tools/build/CMake/BoostCore.cmake	2009-05-20 19:31:35.000000000 -0500
+++ src/boost_1_40_0/tools/build/CMake/BoostCore.cmake	2009-08-27 23:59:53.936242800 -0500
@@ -473,11 +473,14 @@ macro(boost_library_variant_target_name)
   set(VARIANT_TARGET_NAME "")
 
   # The versioned name starts with the full Boost toolset
+  set(VARIANT_VERSIONED_NAME "")
+  if(FALSE)
   if(BUILD_VERSIONED)
     set(VARIANT_VERSIONED_NAME "-${BOOST_TOOLSET}")
   else(BUILD_VERSIONED)
     set(VARIANT_VERSIONED_NAME "")
   endif(BUILD_VERSIONED)
+  endif(FALSE)
 
   # Add -mt for multi-threaded libraries
   list_contains(VARIANT_IS_MT MULTI_THREADED ${ARGN})
@@ -677,11 +680,11 @@ macro(boost_library_variant LIBNAME)
       # On Windows, we need static and shared libraries to have
       # different names, so we follow the Boost.Build version 2 style
       # and prepend "lib" to the name.
-      if(WIN32 AND NOT CYGWIN)
+      if(WIN32)
         set(LIBPREFIX "lib")
-      else(WIN32 AND NOT CYGWIN)
+      else(WIN32)
         set(LIBPREFIX "")
-      endif(WIN32 AND NOT CYGWIN)
+      endif(WIN32)
       
       # Add the library itself
       add_library(${VARIANT_LIBNAME} STATIC ${THIS_LIB_SOURCES})
@@ -744,7 +747,9 @@ macro(boost_library_variant LIBNAME)
       
       # Installation of this library variant
       string(TOLOWER ${PROJECT_NAME} libname)
-      install(TARGETS ${VARIANT_LIBNAME} DESTINATION lib COMPONENT ${LIB_COMPONENT})
+      install(TARGETS ${VARIANT_LIBNAME} LIBRARY DESTINATION lib
+                                         RUNTIME DESTINATION bin
+                                         ARCHIVE DESTINATION lib COMPONENT ${LIB_COMPONENT})
       set_property( 
             TARGET ${VARIANT_LIBNAME}
             PROPERTY BOOST_CPACK_COMPONENT
