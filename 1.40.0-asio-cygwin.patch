--- origsrc/boost_1_40_0/boost/asio/detail/descriptor_ops.hpp	2009-04-19 18:00:29.000000000 -0500
+++ src/boost_1_40_0/boost/asio/detail/descriptor_ops.hpp	2009-08-27 23:41:33.921535600 -0500
@@ -25,7 +25,7 @@
 #include <boost/asio/error.hpp>
 #include <boost/asio/detail/socket_types.hpp>
 
-#if !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+#if !defined(BOOST_WINDOWS)
 
 namespace boost {
 namespace asio {
@@ -171,7 +171,7 @@ inline int poll_write(int d, boost::syst
 } // namespace asio
 } // namespace boost
 
-#endif // !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+#endif // !defined(BOOST_WINDOWS)
 
 #include <boost/asio/detail/pop_options.hpp>
 
--- origsrc/boost_1_40_0/boost/asio/detail/fd_set_adapter.hpp	2008-03-12 09:12:08.000000000 -0500
+++ src/boost_1_40_0/boost/asio/detail/fd_set_adapter.hpp	2009-08-27 23:41:33.927535900 -0500
@@ -28,7 +28,7 @@ namespace boost {
 namespace asio {
 namespace detail {
 
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
 typedef win_fd_set_adapter fd_set_adapter;
 #else
 typedef posix_fd_set_adapter fd_set_adapter;
--- origsrc/boost_1_40_0/boost/asio/detail/local_free_on_block_exit.hpp	2008-03-12 09:12:08.000000000 -0500
+++ src/boost_1_40_0/boost/asio/detail/local_free_on_block_exit.hpp	2009-08-27 23:41:33.933536300 -0500
@@ -21,7 +21,7 @@
 #include <boost/config.hpp>
 #include <boost/asio/detail/pop_options.hpp>
 
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
 
 #include <boost/asio/detail/noncopyable.hpp>
 #include <boost/asio/detail/socket_types.hpp>
@@ -54,7 +54,7 @@ private:
 } // namespace asio
 } // namespace boost
 
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
 
 #include <boost/asio/detail/pop_options.hpp>
 
--- origsrc/boost_1_40_0/boost/asio/detail/old_win_sdk_compat.hpp	2008-06-19 17:20:52.000000000 -0500
+++ src/boost_1_40_0/boost/asio/detail/old_win_sdk_compat.hpp	2009-08-27 23:44:55.833983200 -0500
@@ -21,7 +21,7 @@
 #include <boost/config.hpp>
 #include <boost/asio/detail/pop_options.hpp>
 
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
 
 // Guess whether we are building against on old Platform SDK.
 #if !defined(IN6ADDR_ANY_INIT)
@@ -335,7 +335,7 @@ inline int IN6_IS_ADDR_MC_GLOBAL(const i
 # define IPPROTO_ICMPV6 58
 #endif
 
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
 
 #include <boost/asio/detail/pop_options.hpp>
 
--- origsrc/boost_1_40_0/boost/asio/detail/pipe_select_interrupter.hpp	2009-02-04 00:22:44.000000000 -0600
+++ src/boost_1_40_0/boost/asio/detail/pipe_select_interrupter.hpp	2009-08-27 23:41:33.943536900 -0500
@@ -23,7 +23,7 @@
 #include <boost/system/system_error.hpp>
 #include <boost/asio/detail/pop_options.hpp>
 
-#if !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+#if !defined(BOOST_WINDOWS)
 
 #include <boost/asio/detail/push_options.hpp>
 #include <fcntl.h>
@@ -110,7 +110,7 @@ private:
 } // namespace asio
 } // namespace boost
 
-#endif // !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+#endif // !defined(BOOST_WINDOWS)
 
 #include <boost/asio/detail/pop_options.hpp>
 
--- origsrc/boost_1_40_0/boost/asio/detail/pop_options.hpp	2008-03-12 09:12:08.000000000 -0500
+++ src/boost_1_40_0/boost/asio/detail/pop_options.hpp	2009-08-27 23:41:33.949537200 -0500
@@ -27,7 +27,7 @@
 
 // GNU C++
 
-# if defined(__MINGW32__) || defined(__CYGWIN__)
+# if defined(__MINGW32__)
 #  pragma pack (pop)
 # endif
 
--- origsrc/boost_1_40_0/boost/asio/detail/posix_fd_set_adapter.hpp	2009-02-04 00:22:44.000000000 -0600
+++ src/boost_1_40_0/boost/asio/detail/posix_fd_set_adapter.hpp	2009-08-27 23:41:33.955537500 -0500
@@ -23,7 +23,7 @@
 
 #include <boost/asio/detail/socket_types.hpp>
 
-#if !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+#if !defined(BOOST_WINDOWS)
 
 namespace boost {
 namespace asio {
@@ -76,7 +76,7 @@ private:
 } // namespace asio
 } // namespace boost
 
-#endif // !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+#endif // !defined(BOOST_WINDOWS)
 
 #include <boost/asio/detail/pop_options.hpp>
 
--- origsrc/boost_1_40_0/boost/asio/detail/push_options.hpp	2008-06-19 17:20:52.000000000 -0500
+++ src/boost_1_40_0/boost/asio/detail/push_options.hpp	2009-08-27 23:41:33.960537800 -0500
@@ -27,7 +27,7 @@
 
 // GNU C++
 
-# if defined(__MINGW32__) || defined(__CYGWIN__)
+# if defined(__MINGW32__)
 #  pragma pack (push, 8)
 # endif
 
--- origsrc/boost_1_40_0/boost/asio/detail/reactive_descriptor_service.hpp	2008-10-09 15:43:26.000000000 -0500
+++ src/boost_1_40_0/boost/asio/detail/reactive_descriptor_service.hpp	2009-08-27 23:41:33.966538200 -0500
@@ -26,7 +26,7 @@
 #include <boost/asio/detail/service_base.hpp>
 #include <boost/asio/detail/descriptor_ops.hpp>
 
-#if !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+#if !defined(BOOST_WINDOWS)
 
 namespace boost {
 namespace asio {
@@ -705,7 +705,7 @@ private:
 } // namespace asio
 } // namespace boost
 
-#endif // !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+#endif // !defined(BOOST_WINDOWS)
 
 #include <boost/asio/detail/pop_options.hpp>
 
--- origsrc/boost_1_40_0/boost/asio/detail/reactive_serial_port_service.hpp	2009-04-19 18:00:29.000000000 -0500
+++ src/boost_1_40_0/boost/asio/detail/reactive_serial_port_service.hpp	2009-08-27 23:41:33.971538500 -0500
@@ -26,7 +26,7 @@
 #include <boost/asio/serial_port_base.hpp>
 
 #if defined(BOOST_ASIO_HAS_SERIAL_PORT) \
-  && !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+  && !defined(BOOST_WINDOWS)
 
 #include <boost/asio/error.hpp>
 #include <boost/asio/io_service.hpp>
@@ -263,7 +263,7 @@ private:
 } // namespace boost
 
 #endif // defined(BOOST_ASIO_HAS_SERIAL_PORT)
-       //   && !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+       //   && !defined(BOOST_WINDOWS)
 
 #include <boost/asio/detail/pop_options.hpp>
 
--- origsrc/boost_1_40_0/boost/asio/detail/select_interrupter.hpp	2008-10-09 00:41:50.000000000 -0500
+++ src/boost_1_40_0/boost/asio/detail/select_interrupter.hpp	2009-08-27 23:41:33.977538800 -0500
@@ -29,7 +29,7 @@ namespace boost {
 namespace asio {
 namespace detail {
 
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
 typedef socket_select_interrupter select_interrupter;
 #elif defined(BOOST_ASIO_HAS_EVENTFD)
 typedef eventfd_select_interrupter select_interrupter;
--- origsrc/boost_1_40_0/boost/asio/detail/signal_blocker.hpp	2008-03-12 09:12:08.000000000 -0500
+++ src/boost_1_40_0/boost/asio/detail/signal_blocker.hpp	2009-08-27 23:41:33.983539100 -0500
@@ -23,7 +23,7 @@
 
 #if !defined(BOOST_HAS_THREADS)
 # include <boost/asio/detail/null_signal_blocker.hpp>
-#elif defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#elif defined(BOOST_WINDOWS)
 # include <boost/asio/detail/win_signal_blocker.hpp>
 #elif defined(BOOST_HAS_PTHREADS)
 # include <boost/asio/detail/posix_signal_blocker.hpp>
@@ -37,7 +37,7 @@ namespace detail {
 
 #if !defined(BOOST_HAS_THREADS)
 typedef null_signal_blocker signal_blocker;
-#elif defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#elif defined(BOOST_WINDOWS)
 typedef win_signal_blocker signal_blocker;
 #elif defined(BOOST_HAS_PTHREADS)
 typedef posix_signal_blocker signal_blocker;
--- origsrc/boost_1_40_0/boost/asio/detail/signal_init.hpp	2008-03-12 09:12:08.000000000 -0500
+++ src/boost_1_40_0/boost/asio/detail/signal_init.hpp	2009-08-27 23:41:33.988539400 -0500
@@ -21,7 +21,7 @@
 #include <boost/config.hpp>
 #include <boost/asio/detail/pop_options.hpp>
 
-#if !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+#if !defined(BOOST_WINDOWS)
 
 #include <boost/asio/detail/push_options.hpp>
 #include <csignal>
@@ -46,7 +46,7 @@ public:
 } // namespace asio
 } // namespace boost
 
-#endif // !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+#endif // !defined(BOOST_WINDOWS)
 
 #include <boost/asio/detail/pop_options.hpp>
 
--- origsrc/boost_1_40_0/boost/asio/detail/socket_ops.hpp	2009-04-19 18:00:29.000000000 -0500
+++ src/boost_1_40_0/boost/asio/detail/socket_ops.hpp	2009-08-27 23:41:33.998540000 -0500
@@ -36,9 +36,9 @@ namespace asio {
 namespace detail {
 namespace socket_ops {
 
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
 struct msghdr { int msg_namelen; };
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
 
 #if defined(__hpux)
 // HP-UX doesn't declare these functions extern "C", so they are declared again
@@ -49,7 +49,7 @@ extern "C" unsigned int if_nametoindex(c
 
 inline void clear_error(boost::system::error_code& ec)
 {
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   WSASetLastError(0);
 #else
   errno = 0;
@@ -61,7 +61,7 @@ template <typename ReturnType>
 inline ReturnType error_wrapper(ReturnType return_value,
     boost::system::error_code& ec)
 {
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   ec = boost::system::error_code(WSAGetLastError(),
       boost::asio::error::get_system_category());
 #else
@@ -128,11 +128,11 @@ inline int bind(socket_type s, const soc
 inline int close(socket_type s, boost::system::error_code& ec)
 {
   clear_error(ec);
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   int result = error_wrapper(::closesocket(s), ec);
-#else // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#else // defined(BOOST_WINDOWS)
   int result = error_wrapper(::close(s), ec);
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
   if (result == 0)
     clear_error(ec);
   return result;
@@ -168,7 +168,7 @@ inline int connect(socket_type s, const 
 inline int socketpair(int af, int type, int protocol,
     socket_type sv[2], boost::system::error_code& ec)
 {
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   (void)(af);
   (void)(type);
   (void)(protocol);
@@ -204,32 +204,32 @@ inline void init_buf_iov_base(T& base, v
   base = static_cast<T>(addr);
 }
 
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
 typedef WSABUF buf;
-#else // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#else // defined(BOOST_WINDOWS)
 typedef iovec buf;
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
 
 inline void init_buf(buf& b, void* data, size_t size)
 {
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   b.buf = static_cast<char*>(data);
   b.len = static_cast<u_long>(size);
-#else // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#else // defined(BOOST_WINDOWS)
   init_buf_iov_base(b.iov_base, data);
   b.iov_len = size;
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
 }
 
 inline void init_buf(buf& b, const void* data, size_t size)
 {
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   b.buf = static_cast<char*>(const_cast<void*>(data));
   b.len = static_cast<u_long>(size);
-#else // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#else // defined(BOOST_WINDOWS)
   init_buf_iov_base(b.iov_base, const_cast<void*>(data));
   b.iov_len = size;
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
 }
 
 inline void init_msghdr_msg_name(void*& name, socket_addr_type* addr)
@@ -258,7 +258,7 @@ inline int recv(socket_type s, buf* bufs
     boost::system::error_code& ec)
 {
   clear_error(ec);
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   // Receive some data.
   DWORD recv_buf_count = static_cast<DWORD>(count);
   DWORD bytes_transferred = 0;
@@ -269,7 +269,7 @@ inline int recv(socket_type s, buf* bufs
     return -1;
   clear_error(ec);
   return bytes_transferred;
-#else // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#else // defined(BOOST_WINDOWS)
   msghdr msg = msghdr();
   msg.msg_iov = bufs;
   msg.msg_iovlen = count;
@@ -277,7 +277,7 @@ inline int recv(socket_type s, buf* bufs
   if (result >= 0)
     clear_error(ec);
   return result;
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
 }
 
 inline int recvfrom(socket_type s, buf* bufs, size_t count, int flags,
@@ -285,7 +285,7 @@ inline int recvfrom(socket_type s, buf* 
     boost::system::error_code& ec)
 {
   clear_error(ec);
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   // Receive some data.
   DWORD recv_buf_count = static_cast<DWORD>(count);
   DWORD bytes_transferred = 0;
@@ -298,7 +298,7 @@ inline int recvfrom(socket_type s, buf* 
     return -1;
   clear_error(ec);
   return bytes_transferred;
-#else // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#else // defined(BOOST_WINDOWS)
   msghdr msg = msghdr();
   init_msghdr_msg_name(msg.msg_name, addr);
   msg.msg_namelen = *addrlen;
@@ -309,14 +309,14 @@ inline int recvfrom(socket_type s, buf* 
   if (result >= 0)
     clear_error(ec);
   return result;
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
 }
 
 inline int send(socket_type s, const buf* bufs, size_t count, int flags,
     boost::system::error_code& ec)
 {
   clear_error(ec);
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   // Send the data.
   DWORD send_buf_count = static_cast<DWORD>(count);
   DWORD bytes_transferred = 0;
@@ -327,7 +327,7 @@ inline int send(socket_type s, const buf
     return -1;
   clear_error(ec);
   return bytes_transferred;
-#else // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#else // defined(BOOST_WINDOWS)
   msghdr msg = msghdr();
   msg.msg_iov = const_cast<buf*>(bufs);
   msg.msg_iovlen = count;
@@ -338,7 +338,7 @@ inline int send(socket_type s, const buf
   if (result >= 0)
     clear_error(ec);
   return result;
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
 }
 
 inline int sendto(socket_type s, const buf* bufs, size_t count, int flags,
@@ -346,7 +346,7 @@ inline int sendto(socket_type s, const b
     boost::system::error_code& ec)
 {
   clear_error(ec);
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   // Send the data.
   DWORD send_buf_count = static_cast<DWORD>(count);
   DWORD bytes_transferred = 0;
@@ -357,7 +357,7 @@ inline int sendto(socket_type s, const b
     return -1;
   clear_error(ec);
   return bytes_transferred;
-#else // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#else // defined(BOOST_WINDOWS)
   msghdr msg = msghdr();
   init_msghdr_msg_name(msg.msg_name, addr);
   msg.msg_namelen = addrlen;
@@ -370,14 +370,14 @@ inline int sendto(socket_type s, const b
   if (result >= 0)
     clear_error(ec);
   return result;
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
 }
 
 inline socket_type socket(int af, int type, int protocol,
     boost::system::error_code& ec)
 {
   clear_error(ec);
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   socket_type s = error_wrapper(::WSASocket(af, type, protocol, 0, 0,
         WSA_FLAG_OVERLAPPED), ec);
   if (s == invalid_socket)
@@ -514,7 +514,7 @@ inline int getsockopt(socket_type s, int
   }
   ec = boost::asio::error::fault;
   return -1;
-#elif defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#elif defined(BOOST_WINDOWS)
   clear_error(ec);
   int result = error_wrapper(call_getsockopt(&msghdr::msg_namelen,
         s, level, optname, optval, optlen), ec);
@@ -532,7 +532,7 @@ inline int getsockopt(socket_type s, int
   if (result == 0)
     clear_error(ec);
   return result;
-#else // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#else // defined(BOOST_WINDOWS)
   clear_error(ec);
   int result = error_wrapper(call_getsockopt(&msghdr::msg_namelen,
         s, level, optname, optval, optlen), ec);
@@ -551,7 +551,7 @@ inline int getsockopt(socket_type s, int
   if (result == 0)
     clear_error(ec);
   return result;
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
 }
 
 template <typename SockLenType>
@@ -600,11 +600,11 @@ inline int ioctl(socket_type s, long cmd
     boost::system::error_code& ec)
 {
   clear_error(ec);
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   int result = error_wrapper(::ioctlsocket(s, cmd, arg), ec);
-#else // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#else // defined(BOOST_WINDOWS)
   int result = error_wrapper(::ioctl(s, cmd, arg), ec);
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
   if (result >= 0)
     clear_error(ec);
   return result;
@@ -614,7 +614,7 @@ inline int select(int nfds, fd_set* read
     fd_set* exceptfds, timeval* timeout, boost::system::error_code& ec)
 {
   clear_error(ec);
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   if (!readfds && !writefds && !exceptfds && timeout)
   {
     DWORD milliseconds = timeout->tv_sec * 1000 + timeout->tv_usec / 1000;
@@ -634,7 +634,7 @@ inline int select(int nfds, fd_set* read
   if (timeout && timeout->tv_sec == 0
       && timeout->tv_usec > 0 && timeout->tv_usec < 1000)
     timeout->tv_usec = 1000;
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
 
 #if defined(__hpux) && defined(__HP_aCC)
   timespec ts;
@@ -653,7 +653,7 @@ inline int select(int nfds, fd_set* read
 
 inline int poll_read(socket_type s, boost::system::error_code& ec)
 {
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   FD_SET fds;
   FD_ZERO(&fds);
   FD_SET(s, &fds);
@@ -662,7 +662,7 @@ inline int poll_read(socket_type s, boos
   if (result >= 0)
     clear_error(ec);
   return result;
-#else // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#else // defined(BOOST_WINDOWS)
   pollfd fds;
   fds.fd = s;
   fds.events = POLLIN;
@@ -672,12 +672,12 @@ inline int poll_read(socket_type s, boos
   if (result >= 0)
     clear_error(ec);
   return result;
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
 }
 
 inline int poll_write(socket_type s, boost::system::error_code& ec)
 {
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   FD_SET fds;
   FD_ZERO(&fds);
   FD_SET(s, &fds);
@@ -686,7 +686,7 @@ inline int poll_write(socket_type s, boo
   if (result >= 0)
     clear_error(ec);
   return result;
-#else // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#else // defined(BOOST_WINDOWS)
   pollfd fds;
   fds.fd = s;
   fds.events = POLLOUT;
@@ -696,12 +696,12 @@ inline int poll_write(socket_type s, boo
   if (result >= 0)
     clear_error(ec);
   return result;
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
 }
 
 inline int poll_connect(socket_type s, boost::system::error_code& ec)
 {
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   FD_SET write_fds;
   FD_ZERO(&write_fds);
   FD_SET(s, &write_fds);
@@ -713,7 +713,7 @@ inline int poll_connect(socket_type s, b
   if (result >= 0)
     clear_error(ec);
   return result;
-#else // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#else // defined(BOOST_WINDOWS)
   pollfd fds;
   fds.fd = s;
   fds.events = POLLOUT;
@@ -723,14 +723,14 @@ inline int poll_connect(socket_type s, b
   if (result >= 0)
     clear_error(ec);
   return result;
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
 }
 
 inline const char* inet_ntop(int af, const void* src, char* dest, size_t length,
     unsigned long scope_id, boost::system::error_code& ec)
 {
   clear_error(ec);
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   using namespace std; // For memcpy.
 
   if (af != AF_INET && af != AF_INET6)
@@ -784,7 +784,7 @@ inline const char* inet_ntop(int af, con
     ec = boost::asio::error::invalid_argument;
 
   return result == socket_error_retval ? 0 : dest;
-#else // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#else // defined(BOOST_WINDOWS)
   const char* result = error_wrapper(::inet_ntop(af, src, dest, length), ec);
   if (result == 0 && !ec)
     ec = boost::asio::error::invalid_argument;
@@ -799,14 +799,14 @@ inline const char* inet_ntop(int af, con
     strcat(dest, if_name);
   }
   return result;
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
 }
 
 inline int inet_pton(int af, const char* src, void* dest,
     unsigned long* scope_id, boost::system::error_code& ec)
 {
   clear_error(ec);
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   using namespace std; // For memcpy and strcmp.
 
   if (af != AF_INET && af != AF_INET6)
@@ -866,7 +866,7 @@ inline int inet_pton(int af, const char*
     clear_error(ec);
 
   return result == socket_error_retval ? -1 : 1;
-#else // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#else // defined(BOOST_WINDOWS)
   int result = error_wrapper(::inet_pton(af, src, dest), ec);
   if (result <= 0 && !ec)
     ec = boost::asio::error::invalid_argument;
@@ -885,7 +885,7 @@ inline int inet_pton(int af, const char*
     }
   }
   return result;
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
 }
 
 inline int gethostname(char* name, int namelen, boost::system::error_code& ec)
@@ -899,7 +899,7 @@ inline int gethostname(char* name, int n
   return result;
 }
 
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__) \
+#if defined(BOOST_WINDOWS) \
   || defined(__MACH__) && defined(__APPLE__)
 
 // The following functions are only needed for emulation of getaddrinfo and
@@ -929,7 +929,7 @@ inline hostent* gethostbyaddr(const char
     hostent* result, char* buffer, int buflength, boost::system::error_code& ec)
 {
   clear_error(ec);
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   (void)(buffer);
   (void)(buflength);
   hostent* retval = error_wrapper(::gethostbyaddr(addr, length, af), ec);
@@ -972,7 +972,7 @@ inline hostent* gethostbyname(const char
     char* buffer, int buflength, int ai_flags, boost::system::error_code& ec)
 {
   clear_error(ec);
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   (void)(buffer);
   (void)(buflength);
   (void)(ai_flags);
@@ -1734,7 +1734,7 @@ inline boost::system::error_code getname
   return ec;
 }
 
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
        //   || defined(__MACH__) && defined(__APPLE__)
 
 inline boost::system::error_code translate_addrinfo_error(int error)
@@ -1766,7 +1766,7 @@ inline boost::system::error_code transla
   case EAI_SOCKTYPE:
     return boost::asio::error::socket_type_not_supported;
   default: // Possibly the non-portable EAI_SYSTEM.
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
     return boost::system::error_code(
         WSAGetLastError(), boost::asio::error::get_system_category());
 #else
@@ -1781,7 +1781,7 @@ inline boost::system::error_code getaddr
     boost::system::error_code& ec)
 {
   clear_error(ec);
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
 # if defined(_WIN32_WINNT) && (_WIN32_WINNT >= 0x0501) || defined(UNDER_CE)
   // Building for Windows XP, Windows Server 2003, or later.
   int error = ::getaddrinfo(host, service, hints, result);
@@ -1812,7 +1812,7 @@ inline boost::system::error_code getaddr
 
 inline void freeaddrinfo(addrinfo_type* ai)
 {
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
 # if defined(_WIN32_WINNT) && (_WIN32_WINNT >= 0x0501) || defined(UNDER_CE)
   // Building for Windows XP, Windows Server 2003, or later.
   ::freeaddrinfo(ai);
@@ -1840,7 +1840,7 @@ inline boost::system::error_code getname
     std::size_t addrlen, char* host, std::size_t hostlen,
     char* serv, std::size_t servlen, int flags, boost::system::error_code& ec)
 {
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
 # if defined(_WIN32_WINNT) && (_WIN32_WINNT >= 0x0501) || defined(UNDER_CE)
   // Building for Windows XP, Windows Server 2003, or later.
   clear_error(ec);
--- origsrc/boost_1_40_0/boost/asio/detail/socket_types.hpp	2009-02-04 00:22:44.000000000 -0600
+++ src/boost_1_40_0/boost/asio/detail/socket_types.hpp	2009-08-27 23:41:34.003540300 -0500
@@ -22,7 +22,7 @@
 #include <boost/asio/detail/pop_options.hpp>
 
 #include <boost/asio/detail/push_options.hpp>
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
 # if defined(_WINSOCKAPI_) && !defined(_WINSOCK2API_)
 #  error WinSock.h has already been included
 # endif // defined(_WINSOCKAPI_) && !defined(_WINSOCK2API_)
@@ -121,7 +121,7 @@ namespace boost {
 namespace asio {
 namespace detail {
 
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
 typedef SOCKET socket_type;
 const SOCKET invalid_socket = INVALID_SOCKET;
 const int socket_error_retval = SOCKET_ERROR;
--- origsrc/boost_1_40_0/boost/asio/detail/win_fd_set_adapter.hpp	2008-03-12 09:12:08.000000000 -0500
+++ src/boost_1_40_0/boost/asio/detail/win_fd_set_adapter.hpp	2009-08-27 23:41:34.008540600 -0500
@@ -19,7 +19,7 @@
 
 #include <boost/asio/detail/socket_types.hpp>
 
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
 
 namespace boost {
 namespace asio {
@@ -83,7 +83,7 @@ private:
 } // namespace asio
 } // namespace boost
 
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
 
 #include <boost/asio/detail/pop_options.hpp>
 
--- origsrc/boost_1_40_0/boost/asio/detail/win_iocp_io_service_fwd.hpp	2008-10-09 00:41:50.000000000 -0500
+++ src/boost_1_40_0/boost/asio/detail/win_iocp_io_service_fwd.hpp	2009-08-27 23:41:34.013540900 -0500
@@ -25,7 +25,7 @@
 
 // This service is only supported on Win32 (NT4 and later).
 #if !defined(BOOST_ASIO_DISABLE_IOCP)
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
 #if defined(_WIN32_WINNT) && (_WIN32_WINNT >= 0x0400)
 #if !defined(UNDER_CE)
 
@@ -45,7 +45,7 @@ class win_iocp_overlapped_ptr;
 
 #endif // !defined(UNDER_CE)
 #endif // defined(_WIN32_WINNT) && (_WIN32_WINNT >= 0x0400)
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
 #endif // !defined(BOOST_ASIO_DISABLE_IOCP)
 
 #include <boost/asio/detail/pop_options.hpp>
--- origsrc/boost_1_40_0/boost/asio/detail/win_signal_blocker.hpp	2008-03-12 09:12:08.000000000 -0500
+++ src/boost_1_40_0/boost/asio/detail/win_signal_blocker.hpp	2009-08-27 23:41:34.018541100 -0500
@@ -21,7 +21,7 @@
 #include <boost/config.hpp>
 #include <boost/asio/detail/pop_options.hpp>
 
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
 
 #include <boost/asio/detail/noncopyable.hpp>
 
@@ -62,7 +62,7 @@ public:
 } // namespace asio
 } // namespace boost
 
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
 
 #include <boost/asio/detail/pop_options.hpp>
 
--- origsrc/boost_1_40_0/boost/asio/detail/winsock_init.hpp	2008-03-12 09:12:08.000000000 -0500
+++ src/boost_1_40_0/boost/asio/detail/winsock_init.hpp	2009-08-27 23:41:34.023541400 -0500
@@ -22,7 +22,7 @@
 #include <boost/system/system_error.hpp>
 #include <boost/asio/detail/pop_options.hpp>
 
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
 
 #include <boost/asio/detail/push_options.hpp>
 #include <boost/shared_ptr.hpp>
@@ -115,7 +115,7 @@ winsock_init<Major, Minor> winsock_init<
 } // namespace asio
 } // namespace boost
 
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
 
 #include <boost/asio/detail/pop_options.hpp>
 
--- origsrc/boost_1_40_0/boost/asio/error.hpp	2008-06-19 17:20:52.000000000 -0500
+++ src/boost_1_40_0/boost/asio/error.hpp	2009-08-27 23:41:34.028541700 -0500
@@ -36,7 +36,7 @@
 # define BOOST_ASIO_GETADDRINFO_ERROR(e) implementation_defined
 /// INTERNAL ONLY.
 # define BOOST_ASIO_WIN_OR_POSIX(e_win, e_posix) implementation_defined
-#elif defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#elif defined(BOOST_WINDOWS)
 # define BOOST_ASIO_NATIVE_ERROR(e) e
 # define BOOST_ASIO_SOCKET_ERROR(e) WSA ## e
 # define BOOST_ASIO_NETDB_ERROR(e) WSA ## e
@@ -218,7 +218,7 @@ inline const boost::system::error_catego
   return boost::system::get_system_category();
 }
 
-#if !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+#if !defined(BOOST_WINDOWS)
 
 namespace detail {
 
@@ -280,7 +280,7 @@ inline const boost::system::error_catego
   return instance;
 }
 
-#else // !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+#else // !defined(BOOST_WINDOWS)
 
 inline const boost::system::error_category& get_netdb_category()
 {
@@ -292,7 +292,7 @@ inline const boost::system::error_catego
   return get_system_category();
 }
 
-#endif // !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+#endif // !defined(BOOST_WINDOWS)
 
 namespace detail {
 
--- origsrc/boost_1_40_0/boost/asio/impl/serial_port_base.ipp	2009-06-29 08:36:06.000000000 -0500
+++ src/boost_1_40_0/boost/asio/impl/serial_port_base.ipp	2009-08-27 23:41:34.034542100 -0500
@@ -38,7 +38,7 @@ inline unsigned int serial_port_base::ba
 inline boost::system::error_code serial_port_base::baud_rate::store(
     BOOST_ASIO_OPTION_STORAGE& storage, boost::system::error_code& ec) const
 {
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   storage.BaudRate = value_;
 #else
   speed_t baud;
@@ -126,7 +126,7 @@ inline boost::system::error_code serial_
 inline boost::system::error_code serial_port_base::baud_rate::load(
     const BOOST_ASIO_OPTION_STORAGE& storage, boost::system::error_code& ec)
 {
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   value_ = storage.BaudRate;
 #else
   speed_t baud = ::cfgetospeed(&storage);
@@ -225,7 +225,7 @@ serial_port_base::flow_control::value() 
 inline boost::system::error_code serial_port_base::flow_control::store(
     BOOST_ASIO_OPTION_STORAGE& storage, boost::system::error_code& ec) const
 {
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   storage.fOutxCtsFlow = FALSE;
   storage.fOutxDsrFlow = FALSE;
   storage.fTXContinueOnXoff = TRUE;
@@ -284,7 +284,7 @@ inline boost::system::error_code serial_
 inline boost::system::error_code serial_port_base::flow_control::load(
     const BOOST_ASIO_OPTION_STORAGE& storage, boost::system::error_code& ec)
 {
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   if (storage.fOutX && storage.fInX)
   {
     value_ = software;
@@ -335,7 +335,7 @@ inline serial_port_base::parity::type se
 inline boost::system::error_code serial_port_base::parity::store(
     BOOST_ASIO_OPTION_STORAGE& storage, boost::system::error_code& ec) const
 {
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   switch (value_)
   {
   case none:
@@ -382,7 +382,7 @@ inline boost::system::error_code serial_
 inline boost::system::error_code serial_port_base::parity::load(
     const BOOST_ASIO_OPTION_STORAGE& storage, boost::system::error_code& ec)
 {
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   if (storage.Parity == EVENPARITY)
   {
     value_ = even;
@@ -436,7 +436,7 @@ serial_port_base::stop_bits::value() con
 inline boost::system::error_code serial_port_base::stop_bits::store(
     BOOST_ASIO_OPTION_STORAGE& storage, boost::system::error_code& ec) const
 {
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   switch (value_)
   {
   case one:
@@ -472,7 +472,7 @@ inline boost::system::error_code serial_
 inline boost::system::error_code serial_port_base::stop_bits::load(
     const BOOST_ASIO_OPTION_STORAGE& storage, boost::system::error_code& ec)
 {
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   if (storage.StopBits == ONESTOPBIT)
   {
     value_ = one;
@@ -514,7 +514,7 @@ inline unsigned int serial_port_base::ch
 inline boost::system::error_code serial_port_base::character_size::store(
     BOOST_ASIO_OPTION_STORAGE& storage, boost::system::error_code& ec) const
 {
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   storage.ByteSize = value_;
 #else
   storage.c_cflag &= ~CSIZE;
@@ -534,7 +534,7 @@ inline boost::system::error_code serial_
 inline boost::system::error_code serial_port_base::character_size::load(
     const BOOST_ASIO_OPTION_STORAGE& storage, boost::system::error_code& ec)
 {
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   value_ = storage.ByteSize;
 #else
   if ((storage.c_cflag & CSIZE) == CS5) { value_ = 5; }
--- origsrc/boost_1_40_0/boost/asio/io_service.hpp	2009-07-13 05:41:04.000000000 -0500
+++ src/boost_1_40_0/boost/asio/io_service.hpp	2009-08-27 23:41:34.038542300 -0500
@@ -504,7 +504,7 @@ public:
   friend bool has_service(io_service& ios);
 
 private:
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
   detail::winsock_init<> init_;
 #elif defined(__sun) || defined(__QNX__) || defined(__hpux) || defined(_AIX) \
   || defined(__osf__)
--- origsrc/boost_1_40_0/boost/asio/local/basic_endpoint.hpp	2008-07-22 03:30:38.000000000 -0500
+++ src/boost_1_40_0/boost/asio/local/basic_endpoint.hpp	2009-08-27 23:41:34.043542600 -0500
@@ -32,9 +32,9 @@
 #include <boost/asio/detail/throw_error.hpp>
 
 #if !defined(BOOST_ASIO_DISABLE_LOCAL_SOCKETS)
-# if !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+# if !defined(BOOST_WINDOWS)
 #  define BOOST_ASIO_HAS_LOCAL_SOCKETS 1
-# endif // !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+# endif // !defined(BOOST_WINDOWS)
 #endif // !defined(BOOST_ASIO_DISABLE_LOCAL_SOCKETS)
 
 #if defined(BOOST_ASIO_HAS_LOCAL_SOCKETS) \
--- origsrc/boost_1_40_0/boost/asio/posix/stream_descriptor_service.hpp	2008-06-19 17:20:52.000000000 -0500
+++ src/boost_1_40_0/boost/asio/posix/stream_descriptor_service.hpp	2009-08-27 23:41:34.048542900 -0500
@@ -31,9 +31,9 @@
 #include <boost/asio/detail/reactive_descriptor_service.hpp>
 
 #if !defined(BOOST_ASIO_DISABLE_POSIX_STREAM_DESCRIPTOR)
-# if !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+# if !defined(BOOST_WINDOWS)
 #  define BOOST_ASIO_HAS_POSIX_STREAM_DESCRIPTOR 1
-# endif // !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+# endif // !defined(BOOST_WINDOWS)
 #endif // !defined(BOOST_ASIO_DISABLE_POSIX_STREAM_DESCRIPTOR)
 
 #if defined(BOOST_ASIO_HAS_POSIX_STREAM_DESCRIPTOR) \
--- origsrc/boost_1_40_0/boost/asio/serial_port_base.hpp	2009-04-19 18:00:29.000000000 -0500
+++ src/boost_1_40_0/boost/asio/serial_port_base.hpp	2009-08-27 23:41:34.053543100 -0500
@@ -27,7 +27,7 @@
 
 #if !defined(BOOST_ASIO_DISABLE_SERIAL_PORT)
 # if defined(BOOST_ASIO_HAS_IOCP) \
-    || !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+    || !defined(BOOST_WINDOWS)
 #  define BOOST_ASIO_HAS_SERIAL_PORT 1
 # endif // defined(BOOST_ASIO_HAS_IOCP)
 #endif // !defined(BOOST_ASIO_DISABLE_STREAM_HANDLE)
@@ -35,17 +35,17 @@
 #if defined(BOOST_ASIO_HAS_SERIAL_PORT) \
   || defined(GENERATING_DOCUMENTATION)
 
-#if !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+#if !defined(BOOST_WINDOWS)
 # include <boost/asio/detail/push_options.hpp>
 # include <termios.h>
 # include <boost/asio/detail/pop_options.hpp>
-#endif // !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+#endif // !defined(BOOST_WINDOWS)
 
 #include <boost/asio/detail/socket_types.hpp>
 
 #if defined(GENERATING_DOCUMENTATION)
 # define BOOST_ASIO_OPTION_STORAGE implementation_defined
-#elif defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#elif defined(BOOST_WINDOWS)
 # define BOOST_ASIO_OPTION_STORAGE DCB
 #else
 # define BOOST_ASIO_OPTION_STORAGE termios
--- origsrc/boost_1_40_0/boost/asio/ssl/detail/openssl_init.hpp	2009-06-29 08:36:06.000000000 -0500
+++ src/boost_1_40_0/boost/asio/ssl/detail/openssl_init.hpp	2009-08-27 23:41:34.058543400 -0500
@@ -89,15 +89,15 @@ private:
   private:
     static unsigned long openssl_id_func()
     {
-#if defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#if defined(BOOST_WINDOWS)
       return ::GetCurrentThreadId();
-#else // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#else // defined(BOOST_WINDOWS)
       void* id = instance()->thread_id_;
       if (id == 0)
         instance()->thread_id_ = id = &id; // Ugh.
       BOOST_ASSERT(sizeof(unsigned long) >= sizeof(void*));
       return reinterpret_cast<unsigned long>(id);
-#endif // defined(BOOST_WINDOWS) || defined(__CYGWIN__)
+#endif // defined(BOOST_WINDOWS)
     }
 
     static void openssl_locking_func(int mode, int n, 
@@ -112,10 +112,10 @@ private:
     // Mutexes to be used in locking callbacks.
     std::vector<boost::shared_ptr<boost::asio::detail::mutex> > mutexes_;
 
-#if !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+#if !defined(BOOST_WINDOWS)
     // The thread identifiers to be used by openssl.
     boost::asio::detail::tss_ptr<void> thread_id_;
-#endif // !defined(BOOST_WINDOWS) && !defined(__CYGWIN__)
+#endif // !defined(BOOST_WINDOWS)
   };
 
 public:
