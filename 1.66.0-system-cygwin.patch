--- origsrc/boost_1_66_0/boost/system/api_config.hpp	2017-12-13 17:56:48.000000000 -0600
+++ src/boost_1_66_0/boost/system/api_config.hpp	2018-04-09 01:06:05.035168500 -0500
@@ -33,7 +33,7 @@
 //    Standalone MinGW and all other known Windows compilers do predefine _WIN32
 //    Compilers that predefine _WIN32 or __MINGW32__ do so for Windows 64-bit builds too.
 
-# if defined(_WIN32) || defined(__CYGWIN__) // Windows default, including MinGW and Cygwin
+# if defined(_WIN32) // Windows default, including MinGW and Cygwin
 #   define BOOST_WINDOWS_API
 # else
 #   define BOOST_POSIX_API 
--- origsrc/boost_1_66_0/boost/system/detail/error_code.ipp	2017-12-13 17:56:48.000000000 -0600
+++ src/boost_1_66_0/boost/system/detail/error_code.ipp	2018-04-09 01:08:22.525405200 -0500
@@ -88,6 +88,8 @@ namespace
   # if defined(BOOST_WINDOWS_API) || defined(__hpux) || defined(__sun)\
      || (defined(__linux) && (!defined(__USE_XOPEN2K)\
      || defined(BOOST_SYSTEM_USE_STRERROR)))\
+     || (defined(__CYGWIN__) && ((__POSIX_VISIBLE < 200112)\
+     || defined(BOOST_SYSTEM_USE_STRERROR)))\
      || (defined(__osf__) && !defined(_REENTRANT))\
      || (defined(__INTEGRITY))\
      || (defined(__vms))\
@@ -100,7 +102,7 @@ namespace
       char buf[64];
       char * bp = buf;
       std::size_t sz = sizeof(buf);
-  #  if defined(__CYGWIN__) || defined(__USE_GNU)
+  #  if __GNU_VISIBLE || defined(__USE_GNU)
       // Oddball version of strerror_r
       const char * c_str = strerror_r( ev, bp, sz );
       return  c_str
